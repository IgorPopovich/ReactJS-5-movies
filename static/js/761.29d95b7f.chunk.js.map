{"version":3,"file":"static/js/761.29d95b7f.chunk.js","mappings":"gOAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAAmBT,GAFpB,OAEXU,EAFW,OAGjBN,EAAWM,GAHM,gDAKjBJ,EAAS,EAAD,IALS,yDAAH,qDAQlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,KAChB,wBACGF,EAAQQ,OAASR,EAAQS,KAAI,SAAAC,GAC5B,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,KAAI,yEAMZ,C,4MCrCKC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,oGACLD,IAAAA,IAAA,oCACaD,IAFR,cACjBP,EADiB,yBAIhBA,EAAIU,KAAKC,SAJO,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,uFACRL,IAAAA,IAAA,gCACSD,EADT,yBACiCM,EADjC,wCADQ,cACpBb,EADoB,yBAInBA,EAAIU,KAAKC,SAJU,2CAAH,sDAOZG,EAAkB,mCAAG,WAAMR,GAAN,uFACdE,IAAAA,IAAA,iBACNF,EADM,oBACQC,EADR,oBADc,cAC1BP,EAD0B,yBAIzBA,EAAIU,MAJqB,2CAAH,sDAOlBK,EAAkB,mCAAG,WAAMT,GAAN,uFACdE,IAAAA,IAAA,iBACNF,EADM,4BACgBC,EADhB,oBADc,cAC1BP,EAD0B,yBAIzBA,EAAIU,KAAKM,MAJgB,2CAAH,sDAOlBjB,EAAkB,mCAAG,WAAOO,GAAP,uFACdE,IAAAA,IAAA,iBACNF,EADM,4BACgBC,EADhB,2BADc,cAC1BP,EAD0B,yBAIzBA,EAAIU,KAAKC,SAJgB,2CAAH,qD","sources":["pages/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await fetchMoviesReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews.length ? reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        }) : <p>We don`t have any reviews for this movie.</p>\n        \n        }\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd3f7b1c0656b5d6ae1aec003a1724af6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  const res = await axios.get(\n    `/trending/all/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&page=1&query=${query}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","res","length","map","review","author","content","id","API_KEY","axios","getMovies","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}
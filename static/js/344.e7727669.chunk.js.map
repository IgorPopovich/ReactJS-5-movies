{"version":3,"file":"static/js/344.e7727669.chunk.js","mappings":"4MACA,EAAuB,qBAAvB,EAAqD,uB,oBCArD,EAA6B,8BAA7B,EAAyE,+BAAzE,EAAuH,gC,SCgDvH,EA7CkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,+BACE,kBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACyB,KAAvBJ,EAAYK,QACdC,MAAM,wBAGRR,EAASE,GACTC,EAAe,GAChB,EAIiCM,UAAWC,EAAzC,WACE,kBACEC,KAAK,OACLC,KAAK,cACLC,MAAOX,EACPY,aAAa,MACbC,WAAS,EACTC,YAAY,aACZC,SAxBkB,SAAAZ,GACxBF,EAAeE,EAAEa,OAAOL,MAAMM,cAC/B,EAuBOV,UAAWC,KAEb,mBACEC,KAAK,SACLF,UAAWC,EAFb,wBASP,E,oBCyBD,EA7DmB,WACjB,OAAwCU,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BrB,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeC,EAAf,KACA,GAA0BvB,EAAAA,EAAAA,UAAS,IAAnC,eAAOwB,EAAP,KAAcC,EAAd,KACA,GAA8BzB,EAAAA,EAAAA,WAAS,GAAvC,eAAO0B,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBV,EAAaW,IAAI,SA8BvC,OA5BAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIEH,GAAW,IACXM,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACCA,EAAQC,QACX7B,MAAM,oBAGRgB,EAAUY,EACX,IACAE,OAAM,SAAAb,GACLC,EAAS,kCACTa,QAAQC,IAAIf,EACb,IACAgB,QAAQb,GAAW,GAfvB,CAkBF,GAAE,CAACG,KAQF,iBAAKtB,UAAWC,EAAhB,WACI,0CACCiB,IAAW,SAACe,EAAA,EAAD,IACXjB,IAAS,yBAAMA,KAEhB,SAAC,EAAD,CAAWzB,SAVjB,SAAkBa,GAChBS,EAAgB,CAAEqB,MAAM,GAAD,OAAK9B,IAC7B,IASMU,IACK,0BACE,wBACGA,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMrC,UAAWC,EAAQqC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMpB,GAA7D,SACGiB,KAFID,EADC,UAY7B,C,4MChEKK,EAAU,mCAEHC,EAAS,mCAAG,oGACLC,IAAAA,IAAA,gEACyCF,IAFpC,cACjBG,EADiB,yBAIhBA,EAAIC,KAAKlB,SAJO,2CAAH,qDAOTF,EAAY,mCAAG,WAAOS,GAAP,uFACRS,IAAAA,IAAA,4DACqCF,EADrC,yBAC6DP,EAD7D,wCADQ,cACpBU,EADoB,yBAInBA,EAAIC,KAAKlB,SAJU,2CAAH,sDAOZmB,EAAkB,mCAAG,WAAMV,GAAN,uFACdO,IAAAA,IAAA,6CACsBP,EADtB,oBACoCK,EADpC,oBADc,cAC1BG,EAD0B,yBAIzBA,EAAIC,MAJqB,2CAAH,sDAOlBE,EAAkB,mCAAG,WAAMX,GAAN,uFACdO,IAAAA,IAAA,6CACsBP,EADtB,4BAC4CK,EAD5C,oBADc,cAC1BG,EAD0B,yBAIzBA,EAAIC,KAAKG,MAJgB,2CAAH,sDAOlBC,EAAkB,mCAAG,WAAOb,GAAP,uFACdO,IAAAA,IAAA,6CACsBP,EADtB,4BAC4CK,EAD5C,2BADc,cAC1BG,EAD0B,yBAIzBA,EAAIC,KAAKlB,SAJgB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","components/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Movies_item__+Yifn\",\"movies\":\"Movies_movies__tPRCM\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchInput\":\"SearchBar_searchInput__S8ff+\",\"searchButton\":\"SearchBar_searchButton__hgPYE\"};","import s from './SearchBar.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          className={s.searchInput}\n        />\n        <button\n          type=\"submit\"\n          className={s.searchButton}\n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport s from './Movies.module.css';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { fetchByQuery } from 'services/api';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  // onSubmit\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <div className={s.movies}>\n        <h3>Movies search</h3>\n        {loading && <Loader />}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies &&               \n              <div>\n                <ul>\n                  {movies.map(({ id, original_title }) => (\n                    <li key={id}>\n                      <Link className={s.item} to={`/movies/${id}`} state={{ from: location }}>\n                        {original_title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n          }\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'd3f7b1c0656b5d6ae1aec003a1724af6';\n\nexport const getMovies = async () => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query) => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&page=1&query=${query}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id) => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n};\n"],"names":["onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","className","s","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchByQuery","then","results","length","catch","console","log","finally","Loader","query","map","id","original_title","to","state","from","API_KEY","getMovies","axios","res","data","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}
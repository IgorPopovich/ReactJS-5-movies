{"version":3,"file":"static/js/689.aeccf2e4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieList_item__tDivI\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport s from './MovieList.module.css';\n\nconst MovieList = ({ movies, prevLocation }) => {\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link className={s.item} to={`/movies/${id}`} state={{ from: prevLocation }}>\n              {title ? title : name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Movies_item__Ba4aJ\",\"movies\":\"Movies_movies__TE99a\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchInput\":\"SearchBar_searchInput__S8ff+\",\"searchButton\":\"SearchBar_searchButton__hgPYE\"};","import s from './SearchBar.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      Notiflix.Notify.failure(`Поле \"Search\" порожнє`);\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          className={s.searchInput}\n        />\n        <button\n          type=\"submit\"\n          className={s.searchButton}\n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport s from './Movies.module.css';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { fetchByQuery } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <div className={s.movies}>\n        <h3>Movies search</h3>\n        {loading && <Loader />}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'd3f7b1c0656b5d6ae1aec003a1724af6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n  const res = await axios.get(\n    `/trending/all/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&page=1&query=${query}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n};\n"],"names":["movies","prevLocation","map","id","title","name","className","s","to","state","from","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","Notiflix","type","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","searchRequest","get","useEffect","fetchByQuery","then","results","length","alert","catch","console","log","finally","Loader","query","MovieList","API_KEY","axios","getMovies","res","data","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}